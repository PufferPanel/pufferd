# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger: 
- master

name: $(majorVersion)$(Rev:.r)

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  version: $(Build.BuildNumber)
  packageVersion: v2
  majorVersion: 2.0.0

steps:
- script: |
    mkdir /build
    go version
  displayName: 'Set up the Go workspace'

- script: |
    export GOOS=windows
    export GOARCH=amd64
    go build -o /build/pufferd.exe -ldflags "-X github.com/pufferpanel/pufferd/version.Hash=$(Build.SourceVersion) -X github.com/pufferpanel/pufferd/version.Version=$(version)" -v github.com/pufferpanel/pufferd/$(packageVersion)/cmd
  displayName: 'Windows Build'

- script: |
    export GOOS=linux
    export GOARCH=amd64
    go build -o /build/pufferd -ldflags "-X github.com/pufferpanel/pufferd/version.Hash=$(Build.SourceVersion) -X github.com/pufferpanel/pufferd/version.Version=$(version)" -v github.com/pufferpanel/pufferd/$(packageVersion)/cmd
  displayName: 'Linux Build'

- script: |
    export GOOS=linux
    export GOARCH=arm
    export GOARM=7
    go build -o /build/pufferd-arm -ldflags "-X github.com/pufferpanel/pufferd/version.Hash=$(Build.SourceVersion) -X github.com/pufferpanel/pufferd/version.Version=$(version)" -v github.com/pufferpanel/pufferd/$(packageVersion)/cmd
  displayName: 'Linux Build - ARM'

- task: UseRubyVersion@0
  inputs:
    versionSpec: '>= 2.4'
    addToPath: true

- script: |
    gem install --no-doc rake
    gem install --no-doc fpm && fpm -v
    gem install --no-doc package_cloud && package_cloud version
  displayName: 'Install gem deps'

- script: |
    git clone https://github.com/PufferPanel/systemd
    git clone https://github.com/PufferPanel/templates
  displayName: 'Get supporting files'

- script: |
    mkdir /build/templates
    cd templates
    cp */*.json /build/templates
  displayName: 'Build templates'

- script: |
    fpm -s dir -t deb \
      --name pufferd -v $(version) \
      --maintainer dev@pufferpanel.com \
      --deb-user pufferd --deb-group pufferd \
      --deb-systemd servicefiles/systemd/pufferd \
      --before-install scripts/preinst.sh \
      --after-upgrade scripts/postupgrade.sh \
      --before-remove scripts/prerm.sh \
      --deb-after-purge scripts/purge.sh \
      /build/pufferd=/usr/sbin/pufferd \
      /build/templates=/var/lib/pufferd/

    mkdir /build/xenial
    mv *.deb /build/xenial
  displayName: 'Create packages'
  workingDirectory: systemd/pufferd/xenial

- script: |
    fpm -s deb -t rpm \
      --name pufferd \
      --maintainer dev@pufferpanel.com \
      --rpm-user pufferd --rpm-group pufferd \
      --before-install scripts/preinst.sh \
      --after-upgrade scripts/postupgrade.sh \
      --before-remove scripts/prerm.sh \
      /build/xenial/pufferd_*_amd64.deb

    mkdir /build/rpm
    mv *.rpm /build/rpm
  displayName: 'Create packages'
  workingDirectory: systemd/pufferd/rpm7

- script: |
    fpm -s dir -t deb \
      --name pufferd -v $(version) \
      --maintainer dev@pufferpanel.com \
      --deb-user pufferd --deb-group pufferd \
      --deb-init servicefiles/initd/pufferd \
      --before-install scripts/preinst.sh \
      --before-remove scripts/prerm.sh \
      --deb-after-purge scripts/purge.sh \
      /build/pufferd=/usr/sbin/pufferd \
      /build/templates=/var/lib/pufferd/
    
    mkdir /build/trusty
    mv *.deb /build/trusty
  displayName: 'Create packages'
  workingDirectory: systemd/pufferd/trusty

- script: |
    fpm -s dir -t deb \
      --name pufferd -v $(version) \
      --maintainer dev@pufferpanel.com \
      --deb-user pufferpanel --deb-group pufferd \
      --deb-systemd servicefiles/systemd/pufferd \
      --before-install scripts/preinst.sh \
      --after-upgrade scripts/postupgrade.sh \
      --before-remove scripts/prerm.sh \
      --deb-after-purge scripts/purge.sh \
      -a armhf \
      /build/pufferd-arm=/usr/sbin/pufferd \
      /build/templates=/var/lib/pufferd/

    mkdir /build/buster-arm
    mv *.deb /build/buster-arm
  displayName: 'Create packages - buster'
  workingDirectory: systemd/pufferd/xenial

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'pufferd'
    targetPath: '/build/.'
